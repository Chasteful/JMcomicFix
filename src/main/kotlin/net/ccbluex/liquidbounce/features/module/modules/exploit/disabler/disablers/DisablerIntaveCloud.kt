package net.ccbluex.liquidbounce.features.module.modules.exploit.disabler.disablers

import net.ccbluex.liquidbounce.config.types.nesting.ToggleableConfigurable
import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.event.events.WorldChangeEvent
import net.ccbluex.liquidbounce.event.events.TransferOrigin
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.modules.exploit.disabler.ModuleDisabler
import net.ccbluex.liquidbounce.utils.client.PacketSnapshot
import net.ccbluex.liquidbounce.utils.client.handlePacket
import net.minecraft.network.packet.s2c.common.CommonPingS2CPacket
import java.util.*

internal object DisablerIntaveCloud : ToggleableConfigurable(ModuleDisabler, "IntaveCloud", false) {

    private val packetQueue = LinkedList<PacketSnapshot>()

    @Suppress("unused")
    private val packetHandler = handler<PacketEvent> { event ->
        if (event.origin != TransferOrigin.INCOMING) return@handler
        if (event.packet is CommonPingS2CPacket) {
            event.cancelEvent()
            packetQueue.add(PacketSnapshot(event.packet, event.origin, System.currentTimeMillis()))
            if (packetQueue.size > 50) {
                packetQueue.forEach { handlePacket(it.packet) }
                packetQueue.clear()
            }
        }
    }

    @Suppress("unused")
    private val worldChangeHandler = handler<WorldChangeEvent> {
        packetQueue.clear()
    }
}
