package net.ccbluex.liquidbounce.features.module.modules.exploit.phase.modes

import net.ccbluex.liquidbounce.config.types.nesting.Choice
import net.ccbluex.liquidbounce.config.types.nesting.ChoiceConfigurable
import net.ccbluex.liquidbounce.event.events.PacketEvent
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.event.tickHandler
import net.ccbluex.liquidbounce.features.module.modules.exploit.phase.ModulePhase
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket
import kotlin.math.cos
import kotlin.math.sin

object PhaseAAC350 : Choice("AAC3.5.0") {
    override val parent: ChoiceConfigurable<*>
        get() = ModulePhase.mode

    @Suppress("unused")
    private val tickHandler = tickHandler {
        if (player.horizontalCollision && !player.isInsideWall) {
            val yaw = Math.toRadians(player.yaw.toDouble())
            val x = -sin(yaw)
            val z = cos(yaw)

            player.setPosition(player.x + x, player.y, player.z + z)
        }
    }

    @Suppress("unused")
    private val packetHandler = handler<PacketEvent> { event ->
        val packet = event.packet

        if (packet is PlayerMoveC2SPacket) {
            val yaw = Math.toRadians(player.yaw.toDouble())

            packet.x -= sin(yaw) * 0.00000001
            packet.z += cos(yaw) * 0.00000001
        }
    }
}
